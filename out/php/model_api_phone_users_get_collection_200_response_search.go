/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiPhoneUsersGetCollection200ResponseSearch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPhoneUsersGetCollection200ResponseSearch{}

// ApiPhoneUsersGetCollection200ResponseSearch struct for ApiPhoneUsersGetCollection200ResponseSearch
type ApiPhoneUsersGetCollection200ResponseSearch struct {
	Type *string `json:"@type,omitempty"`
	Template *string `json:"template,omitempty"`
	VariableRepresentation *string `json:"variableRepresentation,omitempty"`
	Mapping []ApiPhoneUsersGetCollection200ResponseSearchMappingInner `json:"mapping,omitempty"`
}

// NewApiPhoneUsersGetCollection200ResponseSearch instantiates a new ApiPhoneUsersGetCollection200ResponseSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPhoneUsersGetCollection200ResponseSearch() *ApiPhoneUsersGetCollection200ResponseSearch {
	this := ApiPhoneUsersGetCollection200ResponseSearch{}
	return &this
}

// NewApiPhoneUsersGetCollection200ResponseSearchWithDefaults instantiates a new ApiPhoneUsersGetCollection200ResponseSearch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPhoneUsersGetCollection200ResponseSearchWithDefaults() *ApiPhoneUsersGetCollection200ResponseSearch {
	this := ApiPhoneUsersGetCollection200ResponseSearch{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) SetType(v string) {
	o.Type = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) SetTemplate(v string) {
	o.Template = &v
}

// GetVariableRepresentation returns the VariableRepresentation field value if set, zero value otherwise.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetVariableRepresentation() string {
	if o == nil || IsNil(o.VariableRepresentation) {
		var ret string
		return ret
	}
	return *o.VariableRepresentation
}

// GetVariableRepresentationOk returns a tuple with the VariableRepresentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetVariableRepresentationOk() (*string, bool) {
	if o == nil || IsNil(o.VariableRepresentation) {
		return nil, false
	}
	return o.VariableRepresentation, true
}

// HasVariableRepresentation returns a boolean if a field has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) HasVariableRepresentation() bool {
	if o != nil && !IsNil(o.VariableRepresentation) {
		return true
	}

	return false
}

// SetVariableRepresentation gets a reference to the given string and assigns it to the VariableRepresentation field.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) SetVariableRepresentation(v string) {
	o.VariableRepresentation = &v
}

// GetMapping returns the Mapping field value if set, zero value otherwise.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetMapping() []ApiPhoneUsersGetCollection200ResponseSearchMappingInner {
	if o == nil || IsNil(o.Mapping) {
		var ret []ApiPhoneUsersGetCollection200ResponseSearchMappingInner
		return ret
	}
	return o.Mapping
}

// GetMappingOk returns a tuple with the Mapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) GetMappingOk() ([]ApiPhoneUsersGetCollection200ResponseSearchMappingInner, bool) {
	if o == nil || IsNil(o.Mapping) {
		return nil, false
	}
	return o.Mapping, true
}

// HasMapping returns a boolean if a field has been set.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) HasMapping() bool {
	if o != nil && !IsNil(o.Mapping) {
		return true
	}

	return false
}

// SetMapping gets a reference to the given []ApiPhoneUsersGetCollection200ResponseSearchMappingInner and assigns it to the Mapping field.
func (o *ApiPhoneUsersGetCollection200ResponseSearch) SetMapping(v []ApiPhoneUsersGetCollection200ResponseSearchMappingInner) {
	o.Mapping = v
}

func (o ApiPhoneUsersGetCollection200ResponseSearch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPhoneUsersGetCollection200ResponseSearch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["@type"] = o.Type
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.VariableRepresentation) {
		toSerialize["variableRepresentation"] = o.VariableRepresentation
	}
	if !IsNil(o.Mapping) {
		toSerialize["mapping"] = o.Mapping
	}
	return toSerialize, nil
}

type NullableApiPhoneUsersGetCollection200ResponseSearch struct {
	value *ApiPhoneUsersGetCollection200ResponseSearch
	isSet bool
}

func (v NullableApiPhoneUsersGetCollection200ResponseSearch) Get() *ApiPhoneUsersGetCollection200ResponseSearch {
	return v.value
}

func (v *NullableApiPhoneUsersGetCollection200ResponseSearch) Set(val *ApiPhoneUsersGetCollection200ResponseSearch) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPhoneUsersGetCollection200ResponseSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPhoneUsersGetCollection200ResponseSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPhoneUsersGetCollection200ResponseSearch(val *ApiPhoneUsersGetCollection200ResponseSearch) *NullableApiPhoneUsersGetCollection200ResponseSearch {
	return &NullableApiPhoneUsersGetCollection200ResponseSearch{value: val, isSet: true}
}

func (v NullableApiPhoneUsersGetCollection200ResponseSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPhoneUsersGetCollection200ResponseSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


