/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PhoneUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneUser{}

// PhoneUser 
type PhoneUser struct {
	Phone *string `json:"phone,omitempty"`
	Id *PhoneUserId `json:"id,omitempty"`
	Login *string `json:"login,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Tweets []Tweet `json:"tweets,omitempty"`
	Authors []string `json:"authors,omitempty"`
	Followers []string `json:"followers,omitempty"`
	SubscriptionAuthors []string `json:"subscriptionAuthors,omitempty"`
	SubscriptionFollowers []string `json:"subscriptionFollowers,omitempty"`
	DeletedAt interface{} `json:"deletedAt,omitempty"`
	AvatarLink interface{} `json:"avatarLink,omitempty"`
	Password *string `json:"password,omitempty"`
	Age *int32 `json:"age,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
	Roles []string `json:"roles,omitempty"`
	Token interface{} `json:"token,omitempty"`
	IsProtected interface{} `json:"isProtected,omitempty"`
	DeletedAtInFuture *string `json:"deletedAtInFuture,omitempty"`
	Active *bool `json:"active,omitempty"`
	UserIdentifier *string `json:"userIdentifier,omitempty"`
	Protected *bool `json:"protected,omitempty"`
}

// NewPhoneUser instantiates a new PhoneUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneUser() *PhoneUser {
	this := PhoneUser{}
	return &this
}

// NewPhoneUserWithDefaults instantiates a new PhoneUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneUserWithDefaults() *PhoneUser {
	this := PhoneUser{}
	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PhoneUser) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PhoneUser) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PhoneUser) SetPhone(v string) {
	o.Phone = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PhoneUser) GetId() PhoneUserId {
	if o == nil || IsNil(o.Id) {
		var ret PhoneUserId
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetIdOk() (*PhoneUserId, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PhoneUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given PhoneUserId and assigns it to the Id field.
func (o *PhoneUser) SetId(v PhoneUserId) {
	o.Id = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *PhoneUser) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *PhoneUser) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *PhoneUser) SetLogin(v string) {
	o.Login = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PhoneUser) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PhoneUser) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PhoneUser) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PhoneUser) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PhoneUser) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PhoneUser) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetTweets returns the Tweets field value if set, zero value otherwise.
func (o *PhoneUser) GetTweets() []Tweet {
	if o == nil || IsNil(o.Tweets) {
		var ret []Tweet
		return ret
	}
	return o.Tweets
}

// GetTweetsOk returns a tuple with the Tweets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetTweetsOk() ([]Tweet, bool) {
	if o == nil || IsNil(o.Tweets) {
		return nil, false
	}
	return o.Tweets, true
}

// HasTweets returns a boolean if a field has been set.
func (o *PhoneUser) HasTweets() bool {
	if o != nil && !IsNil(o.Tweets) {
		return true
	}

	return false
}

// SetTweets gets a reference to the given []Tweet and assigns it to the Tweets field.
func (o *PhoneUser) SetTweets(v []Tweet) {
	o.Tweets = v
}

// GetAuthors returns the Authors field value if set, zero value otherwise.
func (o *PhoneUser) GetAuthors() []string {
	if o == nil || IsNil(o.Authors) {
		var ret []string
		return ret
	}
	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetAuthorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Authors) {
		return nil, false
	}
	return o.Authors, true
}

// HasAuthors returns a boolean if a field has been set.
func (o *PhoneUser) HasAuthors() bool {
	if o != nil && !IsNil(o.Authors) {
		return true
	}

	return false
}

// SetAuthors gets a reference to the given []string and assigns it to the Authors field.
func (o *PhoneUser) SetAuthors(v []string) {
	o.Authors = v
}

// GetFollowers returns the Followers field value if set, zero value otherwise.
func (o *PhoneUser) GetFollowers() []string {
	if o == nil || IsNil(o.Followers) {
		var ret []string
		return ret
	}
	return o.Followers
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetFollowersOk() ([]string, bool) {
	if o == nil || IsNil(o.Followers) {
		return nil, false
	}
	return o.Followers, true
}

// HasFollowers returns a boolean if a field has been set.
func (o *PhoneUser) HasFollowers() bool {
	if o != nil && !IsNil(o.Followers) {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given []string and assigns it to the Followers field.
func (o *PhoneUser) SetFollowers(v []string) {
	o.Followers = v
}

// GetSubscriptionAuthors returns the SubscriptionAuthors field value if set, zero value otherwise.
func (o *PhoneUser) GetSubscriptionAuthors() []string {
	if o == nil || IsNil(o.SubscriptionAuthors) {
		var ret []string
		return ret
	}
	return o.SubscriptionAuthors
}

// GetSubscriptionAuthorsOk returns a tuple with the SubscriptionAuthors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetSubscriptionAuthorsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscriptionAuthors) {
		return nil, false
	}
	return o.SubscriptionAuthors, true
}

// HasSubscriptionAuthors returns a boolean if a field has been set.
func (o *PhoneUser) HasSubscriptionAuthors() bool {
	if o != nil && !IsNil(o.SubscriptionAuthors) {
		return true
	}

	return false
}

// SetSubscriptionAuthors gets a reference to the given []string and assigns it to the SubscriptionAuthors field.
func (o *PhoneUser) SetSubscriptionAuthors(v []string) {
	o.SubscriptionAuthors = v
}

// GetSubscriptionFollowers returns the SubscriptionFollowers field value if set, zero value otherwise.
func (o *PhoneUser) GetSubscriptionFollowers() []string {
	if o == nil || IsNil(o.SubscriptionFollowers) {
		var ret []string
		return ret
	}
	return o.SubscriptionFollowers
}

// GetSubscriptionFollowersOk returns a tuple with the SubscriptionFollowers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetSubscriptionFollowersOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscriptionFollowers) {
		return nil, false
	}
	return o.SubscriptionFollowers, true
}

// HasSubscriptionFollowers returns a boolean if a field has been set.
func (o *PhoneUser) HasSubscriptionFollowers() bool {
	if o != nil && !IsNil(o.SubscriptionFollowers) {
		return true
	}

	return false
}

// SetSubscriptionFollowers gets a reference to the given []string and assigns it to the SubscriptionFollowers field.
func (o *PhoneUser) SetSubscriptionFollowers(v []string) {
	o.SubscriptionFollowers = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhoneUser) GetDeletedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneUser) GetDeletedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return &o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *PhoneUser) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given interface{} and assigns it to the DeletedAt field.
func (o *PhoneUser) SetDeletedAt(v interface{}) {
	o.DeletedAt = v
}

// GetAvatarLink returns the AvatarLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhoneUser) GetAvatarLink() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AvatarLink
}

// GetAvatarLinkOk returns a tuple with the AvatarLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneUser) GetAvatarLinkOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AvatarLink) {
		return nil, false
	}
	return &o.AvatarLink, true
}

// HasAvatarLink returns a boolean if a field has been set.
func (o *PhoneUser) HasAvatarLink() bool {
	if o != nil && !IsNil(o.AvatarLink) {
		return true
	}

	return false
}

// SetAvatarLink gets a reference to the given interface{} and assigns it to the AvatarLink field.
func (o *PhoneUser) SetAvatarLink(v interface{}) {
	o.AvatarLink = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PhoneUser) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PhoneUser) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PhoneUser) SetPassword(v string) {
	o.Password = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *PhoneUser) GetAge() int32 {
	if o == nil || IsNil(o.Age) {
		var ret int32
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *PhoneUser) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given int32 and assigns it to the Age field.
func (o *PhoneUser) SetAge(v int32) {
	o.Age = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *PhoneUser) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *PhoneUser) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *PhoneUser) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *PhoneUser) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *PhoneUser) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *PhoneUser) SetRoles(v []string) {
	o.Roles = v
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhoneUser) GetToken() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneUser) GetTokenOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return &o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PhoneUser) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given interface{} and assigns it to the Token field.
func (o *PhoneUser) SetToken(v interface{}) {
	o.Token = v
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhoneUser) GetIsProtected() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneUser) GetIsProtectedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IsProtected) {
		return nil, false
	}
	return &o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *PhoneUser) HasIsProtected() bool {
	if o != nil && !IsNil(o.IsProtected) {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given interface{} and assigns it to the IsProtected field.
func (o *PhoneUser) SetIsProtected(v interface{}) {
	o.IsProtected = v
}

// GetDeletedAtInFuture returns the DeletedAtInFuture field value if set, zero value otherwise.
func (o *PhoneUser) GetDeletedAtInFuture() string {
	if o == nil || IsNil(o.DeletedAtInFuture) {
		var ret string
		return ret
	}
	return *o.DeletedAtInFuture
}

// GetDeletedAtInFutureOk returns a tuple with the DeletedAtInFuture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetDeletedAtInFutureOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAtInFuture) {
		return nil, false
	}
	return o.DeletedAtInFuture, true
}

// HasDeletedAtInFuture returns a boolean if a field has been set.
func (o *PhoneUser) HasDeletedAtInFuture() bool {
	if o != nil && !IsNil(o.DeletedAtInFuture) {
		return true
	}

	return false
}

// SetDeletedAtInFuture gets a reference to the given string and assigns it to the DeletedAtInFuture field.
func (o *PhoneUser) SetDeletedAtInFuture(v string) {
	o.DeletedAtInFuture = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PhoneUser) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PhoneUser) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PhoneUser) SetActive(v bool) {
	o.Active = &v
}

// GetUserIdentifier returns the UserIdentifier field value if set, zero value otherwise.
func (o *PhoneUser) GetUserIdentifier() string {
	if o == nil || IsNil(o.UserIdentifier) {
		var ret string
		return ret
	}
	return *o.UserIdentifier
}

// GetUserIdentifierOk returns a tuple with the UserIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetUserIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.UserIdentifier) {
		return nil, false
	}
	return o.UserIdentifier, true
}

// HasUserIdentifier returns a boolean if a field has been set.
func (o *PhoneUser) HasUserIdentifier() bool {
	if o != nil && !IsNil(o.UserIdentifier) {
		return true
	}

	return false
}

// SetUserIdentifier gets a reference to the given string and assigns it to the UserIdentifier field.
func (o *PhoneUser) SetUserIdentifier(v string) {
	o.UserIdentifier = &v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *PhoneUser) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneUser) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *PhoneUser) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *PhoneUser) SetProtected(v bool) {
	o.Protected = &v
}

func (o PhoneUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Tweets) {
		toSerialize["tweets"] = o.Tweets
	}
	if !IsNil(o.Authors) {
		toSerialize["authors"] = o.Authors
	}
	if !IsNil(o.Followers) {
		toSerialize["followers"] = o.Followers
	}
	if !IsNil(o.SubscriptionAuthors) {
		toSerialize["subscriptionAuthors"] = o.SubscriptionAuthors
	}
	if !IsNil(o.SubscriptionFollowers) {
		toSerialize["subscriptionFollowers"] = o.SubscriptionFollowers
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.AvatarLink != nil {
		toSerialize["avatarLink"] = o.AvatarLink
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.IsProtected != nil {
		toSerialize["isProtected"] = o.IsProtected
	}
	if !IsNil(o.DeletedAtInFuture) {
		toSerialize["deletedAtInFuture"] = o.DeletedAtInFuture
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.UserIdentifier) {
		toSerialize["userIdentifier"] = o.UserIdentifier
	}
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	return toSerialize, nil
}

type NullablePhoneUser struct {
	value *PhoneUser
	isSet bool
}

func (v NullablePhoneUser) Get() *PhoneUser {
	return v.value
}

func (v *NullablePhoneUser) Set(val *PhoneUser) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneUser) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneUser(val *PhoneUser) *NullablePhoneUser {
	return &NullablePhoneUser{value: val, isSet: true}
}

func (v NullablePhoneUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


