/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SubscriptionJsonld type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionJsonld{}

// SubscriptionJsonld 
type SubscriptionJsonld struct {
	Context *PhoneUserJsonldContext `json:"@context,omitempty"`
	Id *string `json:"@id,omitempty"`
	Type *string `json:"@type,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Author interface{} `json:"author,omitempty"`
	Follower interface{} `json:"follower,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewSubscriptionJsonld instantiates a new SubscriptionJsonld object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionJsonld() *SubscriptionJsonld {
	this := SubscriptionJsonld{}
	return &this
}

// NewSubscriptionJsonldWithDefaults instantiates a new SubscriptionJsonld object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionJsonldWithDefaults() *SubscriptionJsonld {
	this := SubscriptionJsonld{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *SubscriptionJsonld) GetContext() PhoneUserJsonldContext {
	if o == nil || IsNil(o.Context) {
		var ret PhoneUserJsonldContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionJsonld) GetContextOk() (*PhoneUserJsonldContext, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given PhoneUserJsonldContext and assigns it to the Context field.
func (o *SubscriptionJsonld) SetContext(v PhoneUserJsonldContext) {
	o.Context = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriptionJsonld) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionJsonld) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SubscriptionJsonld) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SubscriptionJsonld) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionJsonld) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SubscriptionJsonld) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SubscriptionJsonld) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionJsonld) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SubscriptionJsonld) SetId(v int32) {
	o.Id = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionJsonld) GetAuthor() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionJsonld) GetAuthorOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return &o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given interface{} and assigns it to the Author field.
func (o *SubscriptionJsonld) SetAuthor(v interface{}) {
	o.Author = v
}

// GetFollower returns the Follower field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionJsonld) GetFollower() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Follower
}

// GetFollowerOk returns a tuple with the Follower field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionJsonld) GetFollowerOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Follower) {
		return nil, false
	}
	return &o.Follower, true
}

// HasFollower returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasFollower() bool {
	if o != nil && !IsNil(o.Follower) {
		return true
	}

	return false
}

// SetFollower gets a reference to the given interface{} and assigns it to the Follower field.
func (o *SubscriptionJsonld) SetFollower(v interface{}) {
	o.Follower = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SubscriptionJsonld) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionJsonld) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SubscriptionJsonld) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SubscriptionJsonld) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionJsonld) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SubscriptionJsonld) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SubscriptionJsonld) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o SubscriptionJsonld) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionJsonld) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["@context"] = o.Context
	}
	if !IsNil(o.Id) {
		toSerialize["@id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["@type"] = o.Type
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Author != nil {
		toSerialize["author"] = o.Author
	}
	if o.Follower != nil {
		toSerialize["follower"] = o.Follower
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSubscriptionJsonld struct {
	value *SubscriptionJsonld
	isSet bool
}

func (v NullableSubscriptionJsonld) Get() *SubscriptionJsonld {
	return v.value
}

func (v *NullableSubscriptionJsonld) Set(val *SubscriptionJsonld) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionJsonld) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionJsonld) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionJsonld(val *SubscriptionJsonld) *NullableSubscriptionJsonld {
	return &NullableSubscriptionJsonld{value: val, isSet: true}
}

func (v NullableSubscriptionJsonld) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionJsonld) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


