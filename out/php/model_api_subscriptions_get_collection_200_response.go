/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiSubscriptionsGetCollection200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSubscriptionsGetCollection200Response{}

// ApiSubscriptionsGetCollection200Response struct for ApiSubscriptionsGetCollection200Response
type ApiSubscriptionsGetCollection200Response struct {
	Member []SubscriptionJsonld `json:"member"`
	TotalItems *int32 `json:"totalItems,omitempty"`
	View *ApiPhoneUsersGetCollection200ResponseView `json:"view,omitempty"`
	Search *ApiPhoneUsersGetCollection200ResponseSearch `json:"search,omitempty"`
}

type _ApiSubscriptionsGetCollection200Response ApiSubscriptionsGetCollection200Response

// NewApiSubscriptionsGetCollection200Response instantiates a new ApiSubscriptionsGetCollection200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSubscriptionsGetCollection200Response(member []SubscriptionJsonld) *ApiSubscriptionsGetCollection200Response {
	this := ApiSubscriptionsGetCollection200Response{}
	this.Member = member
	return &this
}

// NewApiSubscriptionsGetCollection200ResponseWithDefaults instantiates a new ApiSubscriptionsGetCollection200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSubscriptionsGetCollection200ResponseWithDefaults() *ApiSubscriptionsGetCollection200Response {
	this := ApiSubscriptionsGetCollection200Response{}
	return &this
}

// GetMember returns the Member field value
func (o *ApiSubscriptionsGetCollection200Response) GetMember() []SubscriptionJsonld {
	if o == nil {
		var ret []SubscriptionJsonld
		return ret
	}

	return o.Member
}

// GetMemberOk returns a tuple with the Member field value
// and a boolean to check if the value has been set.
func (o *ApiSubscriptionsGetCollection200Response) GetMemberOk() ([]SubscriptionJsonld, bool) {
	if o == nil {
		return nil, false
	}
	return o.Member, true
}

// SetMember sets field value
func (o *ApiSubscriptionsGetCollection200Response) SetMember(v []SubscriptionJsonld) {
	o.Member = v
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *ApiSubscriptionsGetCollection200Response) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSubscriptionsGetCollection200Response) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *ApiSubscriptionsGetCollection200Response) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *ApiSubscriptionsGetCollection200Response) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *ApiSubscriptionsGetCollection200Response) GetView() ApiPhoneUsersGetCollection200ResponseView {
	if o == nil || IsNil(o.View) {
		var ret ApiPhoneUsersGetCollection200ResponseView
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSubscriptionsGetCollection200Response) GetViewOk() (*ApiPhoneUsersGetCollection200ResponseView, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *ApiSubscriptionsGetCollection200Response) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given ApiPhoneUsersGetCollection200ResponseView and assigns it to the View field.
func (o *ApiSubscriptionsGetCollection200Response) SetView(v ApiPhoneUsersGetCollection200ResponseView) {
	o.View = &v
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *ApiSubscriptionsGetCollection200Response) GetSearch() ApiPhoneUsersGetCollection200ResponseSearch {
	if o == nil || IsNil(o.Search) {
		var ret ApiPhoneUsersGetCollection200ResponseSearch
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSubscriptionsGetCollection200Response) GetSearchOk() (*ApiPhoneUsersGetCollection200ResponseSearch, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *ApiSubscriptionsGetCollection200Response) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given ApiPhoneUsersGetCollection200ResponseSearch and assigns it to the Search field.
func (o *ApiSubscriptionsGetCollection200Response) SetSearch(v ApiPhoneUsersGetCollection200ResponseSearch) {
	o.Search = &v
}

func (o ApiSubscriptionsGetCollection200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSubscriptionsGetCollection200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["member"] = o.Member
	if !IsNil(o.TotalItems) {
		toSerialize["totalItems"] = o.TotalItems
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	return toSerialize, nil
}

func (o *ApiSubscriptionsGetCollection200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"member",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiSubscriptionsGetCollection200Response := _ApiSubscriptionsGetCollection200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiSubscriptionsGetCollection200Response)

	if err != nil {
		return err
	}

	*o = ApiSubscriptionsGetCollection200Response(varApiSubscriptionsGetCollection200Response)

	return err
}

type NullableApiSubscriptionsGetCollection200Response struct {
	value *ApiSubscriptionsGetCollection200Response
	isSet bool
}

func (v NullableApiSubscriptionsGetCollection200Response) Get() *ApiSubscriptionsGetCollection200Response {
	return v.value
}

func (v *NullableApiSubscriptionsGetCollection200Response) Set(val *ApiSubscriptionsGetCollection200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSubscriptionsGetCollection200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSubscriptionsGetCollection200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSubscriptionsGetCollection200Response(val *ApiSubscriptionsGetCollection200Response) *NullableApiSubscriptionsGetCollection200Response {
	return &NullableApiSubscriptionsGetCollection200Response{value: val, isSet: true}
}

func (v NullableApiSubscriptionsGetCollection200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSubscriptionsGetCollection200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


