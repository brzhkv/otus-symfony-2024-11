/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserCreatedUserDTOJsonld type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCreatedUserDTOJsonld{}

// UserCreatedUserDTOJsonld 
type UserCreatedUserDTOJsonld struct {
	Context *PhoneUserJsonldContext `json:"@context,omitempty"`
	Id *string `json:"@id,omitempty"`
	Type *string `json:"@type,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Login *string `json:"login,omitempty"`
	AvatarLink interface{} `json:"avatarLink,omitempty"`
	Roles []string `json:"roles,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	Phone interface{} `json:"phone,omitempty"`
	Email interface{} `json:"email,omitempty"`
}

// NewUserCreatedUserDTOJsonld instantiates a new UserCreatedUserDTOJsonld object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreatedUserDTOJsonld() *UserCreatedUserDTOJsonld {
	this := UserCreatedUserDTOJsonld{}
	return &this
}

// NewUserCreatedUserDTOJsonldWithDefaults instantiates a new UserCreatedUserDTOJsonld object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreatedUserDTOJsonldWithDefaults() *UserCreatedUserDTOJsonld {
	this := UserCreatedUserDTOJsonld{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetContext() PhoneUserJsonldContext {
	if o == nil || IsNil(o.Context) {
		var ret PhoneUserJsonldContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetContextOk() (*PhoneUserJsonldContext, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given PhoneUserJsonldContext and assigns it to the Context field.
func (o *UserCreatedUserDTOJsonld) SetContext(v PhoneUserJsonldContext) {
	o.Context = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserCreatedUserDTOJsonld) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UserCreatedUserDTOJsonld) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UserCreatedUserDTOJsonld) SetId(v int32) {
	o.Id = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *UserCreatedUserDTOJsonld) SetLogin(v string) {
	o.Login = &v
}

// GetAvatarLink returns the AvatarLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreatedUserDTOJsonld) GetAvatarLink() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AvatarLink
}

// GetAvatarLinkOk returns a tuple with the AvatarLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreatedUserDTOJsonld) GetAvatarLinkOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AvatarLink) {
		return nil, false
	}
	return &o.AvatarLink, true
}

// HasAvatarLink returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasAvatarLink() bool {
	if o != nil && !IsNil(o.AvatarLink) {
		return true
	}

	return false
}

// SetAvatarLink gets a reference to the given interface{} and assigns it to the AvatarLink field.
func (o *UserCreatedUserDTOJsonld) SetAvatarLink(v interface{}) {
	o.AvatarLink = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *UserCreatedUserDTOJsonld) SetRoles(v []string) {
	o.Roles = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *UserCreatedUserDTOJsonld) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UserCreatedUserDTOJsonld) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreatedUserDTOJsonld) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *UserCreatedUserDTOJsonld) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreatedUserDTOJsonld) GetPhone() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreatedUserDTOJsonld) GetPhoneOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return &o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given interface{} and assigns it to the Phone field.
func (o *UserCreatedUserDTOJsonld) SetPhone(v interface{}) {
	o.Phone = v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreatedUserDTOJsonld) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreatedUserDTOJsonld) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserCreatedUserDTOJsonld) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given interface{} and assigns it to the Email field.
func (o *UserCreatedUserDTOJsonld) SetEmail(v interface{}) {
	o.Email = v
}

func (o UserCreatedUserDTOJsonld) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCreatedUserDTOJsonld) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["@context"] = o.Context
	}
	if !IsNil(o.Id) {
		toSerialize["@id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["@type"] = o.Type
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if o.AvatarLink != nil {
		toSerialize["avatarLink"] = o.AvatarLink
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableUserCreatedUserDTOJsonld struct {
	value *UserCreatedUserDTOJsonld
	isSet bool
}

func (v NullableUserCreatedUserDTOJsonld) Get() *UserCreatedUserDTOJsonld {
	return v.value
}

func (v *NullableUserCreatedUserDTOJsonld) Set(val *UserCreatedUserDTOJsonld) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreatedUserDTOJsonld) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreatedUserDTOJsonld) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreatedUserDTOJsonld(val *UserCreatedUserDTOJsonld) *NullableUserCreatedUserDTOJsonld {
	return &NullableUserCreatedUserDTOJsonld{value: val, isSet: true}
}

func (v NullableUserCreatedUserDTOJsonld) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreatedUserDTOJsonld) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


