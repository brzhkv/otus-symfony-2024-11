/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddFollowersDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddFollowersDTO{}

// AddFollowersDTO struct for AddFollowersDTO
type AddFollowersDTO struct {
	FollowerLoginPrefix string `json:"followerLoginPrefix"`
	Count int32 `json:"count"`
	Async *bool `json:"async,omitempty"`
}

type _AddFollowersDTO AddFollowersDTO

// NewAddFollowersDTO instantiates a new AddFollowersDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddFollowersDTO(followerLoginPrefix string, count int32) *AddFollowersDTO {
	this := AddFollowersDTO{}
	this.FollowerLoginPrefix = followerLoginPrefix
	this.Count = count
	var async bool = false
	this.Async = &async
	return &this
}

// NewAddFollowersDTOWithDefaults instantiates a new AddFollowersDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddFollowersDTOWithDefaults() *AddFollowersDTO {
	this := AddFollowersDTO{}
	var async bool = false
	this.Async = &async
	return &this
}

// GetFollowerLoginPrefix returns the FollowerLoginPrefix field value
func (o *AddFollowersDTO) GetFollowerLoginPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FollowerLoginPrefix
}

// GetFollowerLoginPrefixOk returns a tuple with the FollowerLoginPrefix field value
// and a boolean to check if the value has been set.
func (o *AddFollowersDTO) GetFollowerLoginPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FollowerLoginPrefix, true
}

// SetFollowerLoginPrefix sets field value
func (o *AddFollowersDTO) SetFollowerLoginPrefix(v string) {
	o.FollowerLoginPrefix = v
}

// GetCount returns the Count field value
func (o *AddFollowersDTO) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *AddFollowersDTO) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *AddFollowersDTO) SetCount(v int32) {
	o.Count = v
}

// GetAsync returns the Async field value if set, zero value otherwise.
func (o *AddFollowersDTO) GetAsync() bool {
	if o == nil || IsNil(o.Async) {
		var ret bool
		return ret
	}
	return *o.Async
}

// GetAsyncOk returns a tuple with the Async field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddFollowersDTO) GetAsyncOk() (*bool, bool) {
	if o == nil || IsNil(o.Async) {
		return nil, false
	}
	return o.Async, true
}

// HasAsync returns a boolean if a field has been set.
func (o *AddFollowersDTO) HasAsync() bool {
	if o != nil && !IsNil(o.Async) {
		return true
	}

	return false
}

// SetAsync gets a reference to the given bool and assigns it to the Async field.
func (o *AddFollowersDTO) SetAsync(v bool) {
	o.Async = &v
}

func (o AddFollowersDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddFollowersDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["followerLoginPrefix"] = o.FollowerLoginPrefix
	toSerialize["count"] = o.Count
	if !IsNil(o.Async) {
		toSerialize["async"] = o.Async
	}
	return toSerialize, nil
}

func (o *AddFollowersDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"followerLoginPrefix",
		"count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddFollowersDTO := _AddFollowersDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddFollowersDTO)

	if err != nil {
		return err
	}

	*o = AddFollowersDTO(varAddFollowersDTO)

	return err
}

type NullableAddFollowersDTO struct {
	value *AddFollowersDTO
	isSet bool
}

func (v NullableAddFollowersDTO) Get() *AddFollowersDTO {
	return v.value
}

func (v *NullableAddFollowersDTO) Set(val *AddFollowersDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAddFollowersDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAddFollowersDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddFollowersDTO(val *AddFollowersDTO) *NullableAddFollowersDTO {
	return &NullableAddFollowersDTO{value: val, isSet: true}
}

func (v NullableAddFollowersDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddFollowersDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


