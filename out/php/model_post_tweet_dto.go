/*
My App

This is an awesome app!

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostTweetDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTweetDTO{}

// PostTweetDTO struct for PostTweetDTO
type PostTweetDTO struct {
	UserId int32 `json:"userId"`
	Text string `json:"text"`
	Async *bool `json:"async,omitempty"`
}

type _PostTweetDTO PostTweetDTO

// NewPostTweetDTO instantiates a new PostTweetDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTweetDTO(userId int32, text string) *PostTweetDTO {
	this := PostTweetDTO{}
	this.UserId = userId
	this.Text = text
	var async bool = false
	this.Async = &async
	return &this
}

// NewPostTweetDTOWithDefaults instantiates a new PostTweetDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTweetDTOWithDefaults() *PostTweetDTO {
	this := PostTweetDTO{}
	var async bool = false
	this.Async = &async
	return &this
}

// GetUserId returns the UserId field value
func (o *PostTweetDTO) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PostTweetDTO) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PostTweetDTO) SetUserId(v int32) {
	o.UserId = v
}

// GetText returns the Text field value
func (o *PostTweetDTO) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *PostTweetDTO) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *PostTweetDTO) SetText(v string) {
	o.Text = v
}

// GetAsync returns the Async field value if set, zero value otherwise.
func (o *PostTweetDTO) GetAsync() bool {
	if o == nil || IsNil(o.Async) {
		var ret bool
		return ret
	}
	return *o.Async
}

// GetAsyncOk returns a tuple with the Async field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTweetDTO) GetAsyncOk() (*bool, bool) {
	if o == nil || IsNil(o.Async) {
		return nil, false
	}
	return o.Async, true
}

// HasAsync returns a boolean if a field has been set.
func (o *PostTweetDTO) HasAsync() bool {
	if o != nil && !IsNil(o.Async) {
		return true
	}

	return false
}

// SetAsync gets a reference to the given bool and assigns it to the Async field.
func (o *PostTweetDTO) SetAsync(v bool) {
	o.Async = &v
}

func (o PostTweetDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTweetDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["text"] = o.Text
	if !IsNil(o.Async) {
		toSerialize["async"] = o.Async
	}
	return toSerialize, nil
}

func (o *PostTweetDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userId",
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostTweetDTO := _PostTweetDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostTweetDTO)

	if err != nil {
		return err
	}

	*o = PostTweetDTO(varPostTweetDTO)

	return err
}

type NullablePostTweetDTO struct {
	value *PostTweetDTO
	isSet bool
}

func (v NullablePostTweetDTO) Get() *PostTweetDTO {
	return v.value
}

func (v *NullablePostTweetDTO) Set(val *PostTweetDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTweetDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTweetDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTweetDTO(val *PostTweetDTO) *NullablePostTweetDTO {
	return &NullablePostTweetDTO{value: val, isSet: true}
}

func (v NullablePostTweetDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTweetDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


